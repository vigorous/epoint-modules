<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.epoint.role.dao.app.AppRoleMapper">
  <resultMap id="BaseResultMap" type="com.epoint.role.app.entity.AppRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="store_id" jdbcType="BIGINT" property="storeId" />
    <result column="parent_store_id" jdbcType="BIGINT" property="parentStoreId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="role_type" jdbcType="VARCHAR" property="roleType" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="def_type" jdbcType="INTEGER" property="defType" />

  </resultMap>
  <sql id="Base_Column_List">
    id, name, store_id, parent_store_id, remark, status, create_time, update_time, role_type,def_type
  </sql>
  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from app_role
    where id = #{id,jdbcType=BIGINT} and status = '0'
  </select>
  <select id="queryAppRoleByStaffId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select * from app_role r
    left join erp_staff_store ss on ss.app_role_id = r.id
    where ss.erp_staff_id = #{id}
    group by r.id
  </select>
  <delete id="deleteById" parameterType="java.lang.Long">
    delete from app_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.epoint.role.app.entity.AppRole" useGeneratedKeys="true">
    insert into app_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="parentStoreId != null">
        parent_store_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="roleType != null">
        role_type,
      </if>
      <if test="defType != null">
          def_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=BIGINT},
      </if>
      <if test="parentStoreId != null">
        #{parentStoreId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=VARCHAR},
      </if>

      <if test="defType != null">
        #{defType,jdbcType=INTEGER},
      </if>

    </trim>
  </insert>
  <update id="updateById" parameterType="com.epoint.role.app.entity.AppRole">
    update app_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=BIGINT},
      </if>
      <if test="parentStoreId != null">
        parent_store_id = #{parentStoreId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleType != null">
        role_type = #{roleType,jdbcType=VARCHAR},
      </if>

       <if test="defType != null">
           def_type = #{defType,jdbcType=INTEGER},
       </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  	<select id="queryNumByPage" parameterType="map" resultType="Integer">
		select count(*) from app_role where store_id = #{storeId}
	</select>

  <select id="queryListByPage" parameterType="map" resultType="com.epoint.role.app.dto.AppRoleDTO">
		select
          a.id,
          a.name,
          a.store_id storeId,
          a.parent_store_id parentStoreId,
          a.remark,
          a.status,
          a.create_time createTime,
          a.update_time updateTime,
          a.role_type roleType,
          a.def_type defType,
          b.name storeName
		  from app_role a
          LEFT JOIN erp_store b on b.id = a.store_id
          where
            a.store_id = #{storeId} and a.status = 0
          <if test="key != null and key !=''">
              and (a.name like #{key})
          </if>
		order by a.id desc limit #{pageNum},#{pageSize}
	</select>

    <select id="queryListByStoreId" parameterType="map" resultType="com.epoint.role.app.entity.AppRole">
		select
          a.id,
          a.name,
          a.store_id storeId,
          a.parent_store_id parentStoreId,
          a.remark,
          a.status,
          a.create_time createTime,
          a.update_time updateTime,
          a.role_type roleType,
          a.def_type defType
		  from app_role a
          where
            a.store_id = #{storeId} and a.status = 0
	</select>

    <select id="queryByStoreId" parameterType="map" resultType="com.epoint.role.app.entity.AppRole">
      select
      a.id,
      a.name,
      a.store_id storeId,
      a.parent_store_id parentStoreId,
      a.remark,
      a.status,
      a.create_time createTime,
      a.update_time updateTime,
      a.def_type defType,
      a.role_type roleType
      from app_role a
      where a.store_id ='-1'
    </select>
</mapper>